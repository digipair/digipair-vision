import { Component, Entity, Schema, System } from 'aframe';
import { TemplateResult } from 'lit';
import { subscription } from '../interfaces/subscription';
export declare class MetaElement {
    static __NETWORKED__: boolean;
    static __ELEMENT_NAME__: string;
    static __INTERNAL_PROPERTIES__: string[];
    static schema: Schema;
    static dependencies: string[];
    static multiple: boolean;
    static mappings: unknown;
    __AFRAME_INSTANCE__: Component;
    __SUBSCRIPTIONS__: subscription[];
    init(): void;
    pause(): void;
    play(): void;
    remove(): void;
    tick(time: number, timeDelta: number): void;
    tock(time: number, timeDelta: number, camera: any): void;
    update(oldData: unknown): void;
    updateSchema(): void;
    extendSchema(update: Schema): void;
    flushToDOM(): void;
    get attrName(): string | undefined;
    get data(): unknown;
    get dependencies(): string[] | undefined;
    get el(): Entity;
    get id(): string;
    get initialized(): boolean;
    get multiple(): boolean | undefined;
    get name(): string;
    get system(): System | undefined;
    get events(): unknown;
    requestUpdate(): void;
    render(): TemplateResult | null;
}
